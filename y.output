Terminals which are not used

   UMINUS


State 13 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | function program

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    4 declaration: ID COLON INTEGER
    5            | id COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    6 declarations: /* empty */
    7             | declaration SEMICOLON declarations

    8 ID: id
    9   | id COMMA ID

   10 statements: statement SEMICOLON statements
   11           | statement SEMICOLON

   12 statement: var ASSIGN expression
   13          | IF boolExp THEN statements elseStatement ENDIF
   14          | WHILE boolExp BEGINLOOP statements ENDLOOP
   15          | DO BEGINLOOP statements ENDLOOP WHILE boolExp
   16          | FOREACH id IN id BEGINLOOP statements ENDLOOP
   17          | READ vars
   18          | WRITE vars
   19          | CONTINUE
   20          | RETURN expression

   21 elseStatement: /* empty */
   22              | ELSE statements

   23 var: id L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   24    | id

   25 vars: var
   26     | var COMMA vars

   27 expression: multExp
   28           | multExp ADD expression
   29           | multExp SUB expression

   30 expressions: /* empty */
   31            | expression COMMA expressions
   32            | expression

   33 multExp: term
   34        | term MULT multExp
   35        | term DIV multExp
   36        | term MOD multExp

   37 term: var
   38     | SUB var
   39     | NUMBER
   40     | SUB NUMBER
   41     | L_PAREN expression R_PAREN
   42     | SUB L_PAREN expression R_PAREN
   43     | id L_PAREN expressions R_PAREN

   44 boolExp: relaExp
   45        | relaExp OR boolExp

   46 relaExp: rExp
   47        | rExp AND relaExp

   48 rExp: NOT rExp1
   49     | rExp1

   50 rExp1: expression comp expression
   51      | TRUE
   52      | FALSE
   53      | L_PAREN boolExp R_PAREN

   54 comp: EQ
   55     | NEQ
   56     | LT
   57     | GT
   58     | LTE
   59     | GTE

   60 id: CHARACTER


Terminals, with rules where they appear

$end (0) 0
error (256)
SUB (258) 29 38 40 42
ADD (259) 28
MULT (260) 34
DIV (261) 35
MOD (262) 36
L_PAREN (263) 41 42 43 53
R_PAREN (264) 41 42 43 53
L_SQUARE_BRACKET (265) 5 23
R_SQUARE_BRACKET (266) 5 23
GT (267) 57
GTE (268) 59
LT (269) 56
LTE (270) 58
EQ (271) 54
NEQ (272) 55
SEMICOLON (273) 3 7 10 11
COLON (274) 4 5
COMMA (275) 9 26 31
ASSIGN (276) 12
FUNCTION (277) 3
BEGIN_PARAMS (278) 3
END_PARAMS (279) 3
BEGIN_LOCALS (280) 3
END_LOCALS (281) 3
BEGIN_BODY (282) 3
END_BODY (283) 3
INTEGER (284) 4 5
ARRAY (285) 5
OF (286) 5
IF (287) 13
THEN (288) 13
ENDIF (289) 13
ELSE (290) 22
WHILE (291) 14 15
DO (292) 15
FOREACH (293) 16
IN (294) 16
BEGINLOOP (295) 14 15 16
ENDLOOP (296) 14 15 16
CONTINUE (297) 19
READ (298) 17
WRITE (299) 18
AND (300) 47
OR (301) 45
NOT (302) 48
TRUE (303) 51
FALSE (304) 52
RETURN (305) 20
NUMBER (306) 5 39 40
CHARACTER (307) 60
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 2
function (56)
    on left: 3, on right: 2
declaration (57)
    on left: 4 5, on right: 7
declarations (58)
    on left: 6 7, on right: 3 7
ID (59)
    on left: 8 9, on right: 4 9
statements (60)
    on left: 10 11, on right: 3 10 13 14 15 16 22
statement (61)
    on left: 12 13 14 15 16 17 18 19 20, on right: 10 11
elseStatement (62)
    on left: 21 22, on right: 13
var (63)
    on left: 23 24, on right: 12 25 26 37 38
vars (64)
    on left: 25 26, on right: 17 18 26
expression (65)
    on left: 27 28 29, on right: 12 20 23 28 29 31 32 41 42 50
expressions (66)
    on left: 30 31 32, on right: 31 43
multExp (67)
    on left: 33 34 35 36, on right: 27 28 29 34 35 36
term (68)
    on left: 37 38 39 40 41 42 43, on right: 33 34 35 36
boolExp (69)
    on left: 44 45, on right: 13 14 15 45 53
relaExp (70)
    on left: 46 47, on right: 44 45 47
rExp (71)
    on left: 48 49, on right: 46 47
rExp1 (72)
    on left: 50 51 52 53, on right: 48 49
comp (73)
    on left: 54 55 56 57 58 59, on right: 50
id (74)
    on left: 60, on right: 3 5 8 9 16 23 24 43


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


state 1

    3 function: FUNCTION . id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    CHARACTER  shift, and go to state 4

    id  go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 7
    function  go to state 3


state 4

   60 id: CHARACTER .

    $default  reduce using rule 60 (id)


state 5

    3 function: FUNCTION id . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    2 program: function program .

    $default  reduce using rule 2 (program)


state 8

    3 function: FUNCTION id SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    CHARACTER  shift, and go to state 4

    $default  reduce using rule 6 (declarations)

    declaration   go to state 10
    declarations  go to state 11
    ID            go to state 12
    id            go to state 13


state 10

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 14


state 11

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    4 declaration: ID . COLON INTEGER

    COLON  shift, and go to state 16


state 13

    5 declaration: id . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8 ID: id .
    9   | id . COMMA ID

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    COLON  [reduce using rule 8 (ID)]


state 14

    7 declarations: declaration SEMICOLON . declarations

    CHARACTER  shift, and go to state 4

    $default  reduce using rule 6 (declarations)

    declaration   go to state 10
    declarations  go to state 19
    ID            go to state 12
    id            go to state 13


state 15

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


state 16

    4 declaration: ID COLON . INTEGER

    INTEGER  shift, and go to state 21


state 17

    5 declaration: id COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY  shift, and go to state 22


state 18

    9 ID: id COMMA . ID

    CHARACTER  shift, and go to state 4

    ID  go to state 23
    id  go to state 24


state 19

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


state 20

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    CHARACTER  shift, and go to state 4

    $default  reduce using rule 6 (declarations)

    declaration   go to state 10
    declarations  go to state 25
    ID            go to state 12
    id            go to state 13


state 21

    4 declaration: ID COLON INTEGER .

    $default  reduce using rule 4 (declaration)


state 22

    5 declaration: id COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


state 23

    9 ID: id COMMA ID .

    $default  reduce using rule 9 (ID)


state 24

    8 ID: id .
    9   | id . COMMA ID

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (ID)


state 25

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


state 26

    5 declaration: id COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


state 27

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 29


state 28

    5 declaration: id COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


state 29

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


state 30

    5 declaration: id COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 32


state 31

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY . statements END_BODY

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    statements  go to state 41
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 32

    5 declaration: id COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 45


state 33

   13 statement: IF . boolExp THEN statements elseStatement ENDIF

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    NOT        shift, and go to state 48
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 53
    multExp     go to state 54
    term        go to state 55
    boolExp     go to state 56
    relaExp     go to state 57
    rExp        go to state 58
    rExp1       go to state 59
    id          go to state 60


state 34

   14 statement: WHILE . boolExp BEGINLOOP statements ENDLOOP

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    NOT        shift, and go to state 48
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 53
    multExp     go to state 54
    term        go to state 55
    boolExp     go to state 61
    relaExp     go to state 57
    rExp        go to state 58
    rExp1       go to state 59
    id          go to state 60


state 35

   15 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolExp

    BEGINLOOP  shift, and go to state 62


state 36

   16 statement: FOREACH . id IN id BEGINLOOP statements ENDLOOP

    CHARACTER  shift, and go to state 4

    id  go to state 63


state 37

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


state 38

   17 statement: READ . vars

    CHARACTER  shift, and go to state 4

    var   go to state 64
    vars  go to state 65
    id    go to state 44


state 39

   18 statement: WRITE . vars

    CHARACTER  shift, and go to state 4

    var   go to state 64
    vars  go to state 66
    id    go to state 44


state 40

   20 statement: RETURN . expression

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 68
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 41

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 69


state 42

   10 statements: statement . SEMICOLON statements
   11           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 70


state 43

   12 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


state 44

   23 var: id . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   24    | id .

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 24 (var)


state 45

    5 declaration: id COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (declaration)


state 46

   38 term: SUB . var
   40     | SUB . NUMBER
   42     | SUB . L_PAREN expression R_PAREN

    L_PAREN    shift, and go to state 73
    NUMBER     shift, and go to state 74
    CHARACTER  shift, and go to state 4

    var  go to state 75
    id   go to state 44


state 47

   41 term: L_PAREN . expression R_PAREN
   53 rExp1: L_PAREN . boolExp R_PAREN

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    NOT        shift, and go to state 48
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 76
    multExp     go to state 54
    term        go to state 55
    boolExp     go to state 77
    relaExp     go to state 57
    rExp        go to state 58
    rExp1       go to state 59
    id          go to state 60


state 48

   48 rExp: NOT . rExp1

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 53
    multExp     go to state 54
    term        go to state 55
    rExp1       go to state 78
    id          go to state 60


state 49

   51 rExp1: TRUE .

    $default  reduce using rule 51 (rExp1)


state 50

   52 rExp1: FALSE .

    $default  reduce using rule 52 (rExp1)


state 51

   39 term: NUMBER .

    $default  reduce using rule 39 (term)


state 52

   37 term: var .

    $default  reduce using rule 37 (term)


state 53

   50 rExp1: expression . comp expression

    GT   shift, and go to state 79
    GTE  shift, and go to state 80
    LT   shift, and go to state 81
    LTE  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84

    comp  go to state 85


state 54

   27 expression: multExp .
   28           | multExp . ADD expression
   29           | multExp . SUB expression

    SUB  shift, and go to state 86
    ADD  shift, and go to state 87

    $default  reduce using rule 27 (expression)


state 55

   33 multExp: term .
   34        | term . MULT multExp
   35        | term . DIV multExp
   36        | term . MOD multExp

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 33 (multExp)


state 56

   13 statement: IF boolExp . THEN statements elseStatement ENDIF

    THEN  shift, and go to state 91


state 57

   44 boolExp: relaExp .
   45        | relaExp . OR boolExp

    OR  shift, and go to state 92

    $default  reduce using rule 44 (boolExp)


state 58

   46 relaExp: rExp .
   47        | rExp . AND relaExp

    AND  shift, and go to state 93

    $default  reduce using rule 46 (relaExp)


state 59

   49 rExp: rExp1 .

    $default  reduce using rule 49 (rExp)


state 60

   23 var: id . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   24    | id .
   43 term: id . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 24 (var)


state 61

   14 statement: WHILE boolExp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 95


state 62

   15 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolExp

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    statements  go to state 96
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 63

   16 statement: FOREACH id . IN id BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 97


state 64

   25 vars: var .
   26     | var . COMMA vars

    COMMA  shift, and go to state 98

    $default  reduce using rule 25 (vars)


state 65

   17 statement: READ vars .

    $default  reduce using rule 17 (statement)


state 66

   18 statement: WRITE vars .

    $default  reduce using rule 18 (statement)


state 67

   41 term: L_PAREN . expression R_PAREN

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 99
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 68

   20 statement: RETURN expression .

    $default  reduce using rule 20 (statement)


state 69

    3 function: FUNCTION id SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


state 70

   10 statements: statement SEMICOLON . statements
   11           | statement SEMICOLON .

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    $default  reduce using rule 11 (statements)

    statements  go to state 100
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 71

   12 statement: var ASSIGN . expression

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 101
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 72

   23 var: id L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 102
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 73

   42 term: SUB L_PAREN . expression R_PAREN

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 103
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 74

   40 term: SUB NUMBER .

    $default  reduce using rule 40 (term)


state 75

   38 term: SUB var .

    $default  reduce using rule 38 (term)


state 76

   41 term: L_PAREN expression . R_PAREN
   50 rExp1: expression . comp expression

    R_PAREN  shift, and go to state 104
    GT       shift, and go to state 79
    GTE      shift, and go to state 80
    LT       shift, and go to state 81
    LTE      shift, and go to state 82
    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84

    comp  go to state 85


state 77

   53 rExp1: L_PAREN boolExp . R_PAREN

    R_PAREN  shift, and go to state 105


state 78

   48 rExp: NOT rExp1 .

    $default  reduce using rule 48 (rExp)


state 79

   57 comp: GT .

    $default  reduce using rule 57 (comp)


state 80

   59 comp: GTE .

    $default  reduce using rule 59 (comp)


state 81

   56 comp: LT .

    $default  reduce using rule 56 (comp)


state 82

   58 comp: LTE .

    $default  reduce using rule 58 (comp)


state 83

   54 comp: EQ .

    $default  reduce using rule 54 (comp)


state 84

   55 comp: NEQ .

    $default  reduce using rule 55 (comp)


state 85

   50 rExp1: expression comp . expression

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 106
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 86

   29 expression: multExp SUB . expression

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 107
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 87

   28 expression: multExp ADD . expression

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 108
    multExp     go to state 54
    term        go to state 55
    id          go to state 60


state 88

   34 multExp: term MULT . multExp

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var      go to state 52
    multExp  go to state 109
    term     go to state 55
    id       go to state 60


state 89

   35 multExp: term DIV . multExp

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var      go to state 52
    multExp  go to state 110
    term     go to state 55
    id       go to state 60


state 90

   36 multExp: term MOD . multExp

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var      go to state 52
    multExp  go to state 111
    term     go to state 55
    id       go to state 60


state 91

   13 statement: IF boolExp THEN . statements elseStatement ENDIF

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    statements  go to state 112
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 92

   45 boolExp: relaExp OR . boolExp

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    NOT        shift, and go to state 48
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 53
    multExp     go to state 54
    term        go to state 55
    boolExp     go to state 113
    relaExp     go to state 57
    rExp        go to state 58
    rExp1       go to state 59
    id          go to state 60


state 93

   47 relaExp: rExp AND . relaExp

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    NOT        shift, and go to state 48
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 53
    multExp     go to state 54
    term        go to state 55
    relaExp     go to state 114
    rExp        go to state 58
    rExp1       go to state 59
    id          go to state 60


state 94

   43 term: id L_PAREN . expressions R_PAREN

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    $default  reduce using rule 30 (expressions)

    var          go to state 52
    expression   go to state 115
    expressions  go to state 116
    multExp      go to state 54
    term         go to state 55
    id           go to state 60


state 95

   14 statement: WHILE boolExp BEGINLOOP . statements ENDLOOP

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    statements  go to state 117
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 96

   15 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolExp

    ENDLOOP  shift, and go to state 118


state 97

   16 statement: FOREACH id IN . id BEGINLOOP statements ENDLOOP

    CHARACTER  shift, and go to state 4

    id  go to state 119


state 98

   26 vars: var COMMA . vars

    CHARACTER  shift, and go to state 4

    var   go to state 64
    vars  go to state 120
    id    go to state 44


state 99

   41 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 104


state 100

   10 statements: statement SEMICOLON statements .

    $default  reduce using rule 10 (statements)


state 101

   12 statement: var ASSIGN expression .

    $default  reduce using rule 12 (statement)


state 102

   23 var: id L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 121


state 103

   42 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 122


state 104

   41 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 41 (term)


state 105

   53 rExp1: L_PAREN boolExp R_PAREN .

    $default  reduce using rule 53 (rExp1)


state 106

   50 rExp1: expression comp expression .

    $default  reduce using rule 50 (rExp1)


state 107

   29 expression: multExp SUB expression .

    $default  reduce using rule 29 (expression)


state 108

   28 expression: multExp ADD expression .

    $default  reduce using rule 28 (expression)


state 109

   34 multExp: term MULT multExp .

    $default  reduce using rule 34 (multExp)


state 110

   35 multExp: term DIV multExp .

    $default  reduce using rule 35 (multExp)


state 111

   36 multExp: term MOD multExp .

    $default  reduce using rule 36 (multExp)


state 112

   13 statement: IF boolExp THEN statements . elseStatement ENDIF

    ELSE  shift, and go to state 123

    $default  reduce using rule 21 (elseStatement)

    elseStatement  go to state 124


state 113

   45 boolExp: relaExp OR boolExp .

    $default  reduce using rule 45 (boolExp)


state 114

   47 relaExp: rExp AND relaExp .

    $default  reduce using rule 47 (relaExp)


state 115

   31 expressions: expression . COMMA expressions
   32            | expression .

    COMMA  shift, and go to state 125

    $default  reduce using rule 32 (expressions)


state 116

   43 term: id L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 126


state 117

   14 statement: WHILE boolExp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 127


state 118

   15 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolExp

    WHILE  shift, and go to state 128


state 119

   16 statement: FOREACH id IN id . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 129


state 120

   26 vars: var COMMA vars .

    $default  reduce using rule 26 (vars)


state 121

   23 var: id L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 23 (var)


state 122

   42 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 42 (term)


state 123

   22 elseStatement: ELSE . statements

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    statements  go to state 130
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 124

   13 statement: IF boolExp THEN statements elseStatement . ENDIF

    ENDIF  shift, and go to state 131


state 125

   31 expressions: expression COMMA . expressions

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 67
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    $default  reduce using rule 30 (expressions)

    var          go to state 52
    expression   go to state 115
    expressions  go to state 132
    multExp      go to state 54
    term         go to state 55
    id           go to state 60


state 126

   43 term: id L_PAREN expressions R_PAREN .

    $default  reduce using rule 43 (term)


state 127

   14 statement: WHILE boolExp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 14 (statement)


state 128

   15 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolExp

    SUB        shift, and go to state 46
    L_PAREN    shift, and go to state 47
    NOT        shift, and go to state 48
    TRUE       shift, and go to state 49
    FALSE      shift, and go to state 50
    NUMBER     shift, and go to state 51
    CHARACTER  shift, and go to state 4

    var         go to state 52
    expression  go to state 53
    multExp     go to state 54
    term        go to state 55
    boolExp     go to state 133
    relaExp     go to state 57
    rExp        go to state 58
    rExp1       go to state 59
    id          go to state 60


state 129

   16 statement: FOREACH id IN id BEGINLOOP . statements ENDLOOP

    IF         shift, and go to state 33
    WHILE      shift, and go to state 34
    DO         shift, and go to state 35
    FOREACH    shift, and go to state 36
    CONTINUE   shift, and go to state 37
    READ       shift, and go to state 38
    WRITE      shift, and go to state 39
    RETURN     shift, and go to state 40
    CHARACTER  shift, and go to state 4

    statements  go to state 134
    statement   go to state 42
    var         go to state 43
    id          go to state 44


state 130

   22 elseStatement: ELSE statements .

    $default  reduce using rule 22 (elseStatement)


state 131

   13 statement: IF boolExp THEN statements elseStatement ENDIF .

    $default  reduce using rule 13 (statement)


state 132

   31 expressions: expression COMMA expressions .

    $default  reduce using rule 31 (expressions)


state 133

   15 statement: DO BEGINLOOP statements ENDLOOP WHILE boolExp .

    $default  reduce using rule 15 (statement)


state 134

   16 statement: FOREACH id IN id BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


state 135

   16 statement: FOREACH id IN id BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)
