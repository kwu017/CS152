Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declaration: identifiers COLON INTEGER
    6            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    7 declarations: /* empty */
    8             | declaration SEMICOLON declarations

    9 statements: statement SEMICOLON statements
   10           | statement SEMICOLON

   11 statement: var ASSIGN expression
   12          | IF bool_expr THEN statements else_statement ENDIF
   13          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   14          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   15          | FOREACH ident IN ident BEGINLOOP statements ENDLOOP
   16          | READ vars
   17          | WRITE vars
   18          | CONTINUE
   19          | RETURN expression

   20 else_statement: /* empty */
   21               | ELSE statements

   22 bool_expr: relation_and_expr
   23          | relation_and_expr OR bool_expr

   24 relation_and_expr: relation_expr
   25                  | relation_expr AND relation_and_expr

   26 relation_expr: NOT relation_exp
   27              | relation_exp

   28 relation_exp: expression comp expression
   29             | TRUE
   30             | FALSE
   31             | L_PAREN bool_expr R_PAREN

   32 comp: GT
   33     | GTE
   34     | LT
   35     | LTE
   36     | EQ
   37     | NEQ

   38 expression: multiplicative_expr
   39           | multiplicative_expr ADD expression
   40           | multiplicative_expr SUB expression

   41 expressions: /* empty */
   42            | expression COMMA expressions
   43            | expression

   44 multiplicative_expr: term
   45                    | term MULT multiplicative_expr
   46                    | term DIV multiplicative_expr
   47                    | term MOD multiplicative_expr

   48 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   49    | ident

   50 vars: var
   51     | var COMMA vars

   52 term: var
   53     | SUB var
   54     | NUMBER
   55     | SUB NUMBER
   56     | L_PAREN expression R_PAREN
   57     | SUB L_PAREN expression R_PAREN
   58     | ident L_PAREN expressions R_PAREN

   59 identifiers: ident
   60            | ident COMMA identifiers

   61 ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
SUB (258) 40 53 55 57
ADD (259) 39
MULT (260) 45
DIV (261) 46
MOD (262) 47
L_PAREN (263) 31 56 57 58
R_PAREN (264) 31 56 57 58
L_SQUARE_BRACKET (265) 6 48
R_SQUARE_BRACKET (266) 6 48
GT (267) 32
GTE (268) 33
LT (269) 34
LTE (270) 35
EQ (271) 36
NEQ (272) 37
SEMICOLON (273) 4 8 9 10
COLON (274) 5 6
COMMA (275) 42 51 60
ASSIGN (276) 11
FUNCTION (277) 4
BEGIN_PARAMS (278) 4
END_PARAMS (279) 4
BEGIN_LOCALS (280) 4
END_LOCALS (281) 4
BEGIN_BODY (282) 4
END_BODY (283) 4
INTEGER (284) 5 6
ARRAY (285) 6
OF (286) 6
IF (287) 12
THEN (288) 12
ENDIF (289) 12
ELSE (290) 21
WHILE (291) 13 14
DO (292) 14
FOREACH (293) 15
IN (294) 15
BEGINLOOP (295) 13 14 15
ENDLOOP (296) 13 14 15
CONTINUE (297) 18
READ (298) 16
WRITE (299) 17
AND (300) 25
OR (301) 23
NOT (302) 26
TRUE (303) 29
FALSE (304) 30
RETURN (305) 19
IDENT (306) 61
NUMBER (307) 6 54 55


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declaration (57)
    on left: 5 6, on right: 8
declarations (58)
    on left: 7 8, on right: 4 8
statements (59)
    on left: 9 10, on right: 4 9 12 13 14 15 21
statement (60)
    on left: 11 12 13 14 15 16 17 18 19, on right: 9 10
else_statement (61)
    on left: 20 21, on right: 12
bool_expr (62)
    on left: 22 23, on right: 12 13 14 23 31
relation_and_expr (63)
    on left: 24 25, on right: 22 23 25
relation_expr (64)
    on left: 26 27, on right: 24 25
relation_exp (65)
    on left: 28 29 30 31, on right: 26 27
comp (66)
    on left: 32 33 34 35 36 37, on right: 28
expression (67)
    on left: 38 39 40, on right: 11 19 28 39 40 42 43 48 56 57
expressions (68)
    on left: 41 42 43, on right: 42 58
multiplicative_expr (69)
    on left: 44 45 46 47, on right: 38 39 40 45 46 47
var (70)
    on left: 48 49, on right: 11 50 51 52 53
vars (71)
    on left: 50 51, on right: 16 17 51
term (72)
    on left: 52 53 54 55 56 57 58, on right: 44 45 46 47
identifiers (73)
    on left: 59 60, on right: 5 6 60
ident (74)
    on left: 61, on right: 4 15 48 49 58 59 60


state 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


state 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


state 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


state 5

   61 ident: IDENT .

    $default  reduce using rule 61 (ident)


state 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


state 7

    0 $accept: prog_start $end .

    $default  accept


state 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


state 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (declarations)

    declaration   go to state 11
    declarations  go to state 12
    identifiers   go to state 13
    ident         go to state 14


state 11

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


state 12

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


state 13

    5 declaration: identifiers . COLON INTEGER
    6            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


state 14

   59 identifiers: ident .
   60            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 59 (identifiers)


state 15

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (declarations)

    declaration   go to state 11
    declarations  go to state 19
    identifiers   go to state 13
    ident         go to state 14


state 16

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


state 17

    5 declaration: identifiers COLON . INTEGER
    6            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


state 18

   60 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 23
    ident        go to state 14


state 19

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


state 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (declarations)

    declaration   go to state 11
    declarations  go to state 24
    identifiers   go to state 13
    ident         go to state 14


state 21

    5 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 5 (declaration)


state 22

    6 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


state 23

   60 identifiers: ident COMMA identifiers .

    $default  reduce using rule 60 (identifiers)


state 24

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


state 25

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


state 26

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


state 27

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


state 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    statements  go to state 38
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 29

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


state 30

   12 statement: IF . bool_expr THEN statements else_statement ENDIF

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    bool_expr            go to state 49
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    relation_exp         go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 31

   13 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    bool_expr            go to state 58
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    relation_exp         go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 32

   14 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 59


state 33

   15 statement: FOREACH . ident IN ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 60


state 34

   18 statement: CONTINUE .

    $default  reduce using rule 18 (statement)


state 35

   16 statement: READ . vars

    IDENT  shift, and go to state 5

    var    go to state 61
    vars   go to state 62
    ident  go to state 41


state 36

   17 statement: WRITE . vars

    IDENT  shift, and go to state 5

    var    go to state 61
    vars   go to state 63
    ident  go to state 41


state 37

   19 statement: RETURN . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 65
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 38

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


state 39

    9 statements: statement . SEMICOLON statements
   10           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 40

   11 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


state 41

   48 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   49    | ident .

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 49 (var)


state 42

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 70


state 43

   53 term: SUB . var
   55     | SUB . NUMBER
   57     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 72

    var    go to state 73
    ident  go to state 41


state 44

   31 relation_exp: L_PAREN . bool_expr R_PAREN
   56 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    bool_expr            go to state 74
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    relation_exp         go to state 52
    expression           go to state 75
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 45

   26 relation_expr: NOT . relation_exp

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    relation_exp         go to state 76
    expression           go to state 53
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 46

   29 relation_exp: TRUE .

    $default  reduce using rule 29 (relation_exp)


state 47

   30 relation_exp: FALSE .

    $default  reduce using rule 30 (relation_exp)


state 48

   54 term: NUMBER .

    $default  reduce using rule 54 (term)


state 49

   12 statement: IF bool_expr . THEN statements else_statement ENDIF

    THEN  shift, and go to state 77


state 50

   22 bool_expr: relation_and_expr .
   23          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 78

    $default  reduce using rule 22 (bool_expr)


state 51

   24 relation_and_expr: relation_expr .
   25                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 79

    $default  reduce using rule 24 (relation_and_expr)


state 52

   27 relation_expr: relation_exp .

    $default  reduce using rule 27 (relation_expr)


state 53

   28 relation_exp: expression . comp expression

    GT   shift, and go to state 80
    GTE  shift, and go to state 81
    LT   shift, and go to state 82
    LTE  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85

    comp  go to state 86


state 54

   38 expression: multiplicative_expr .
   39           | multiplicative_expr . ADD expression
   40           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 38 (expression)


state 55

   52 term: var .

    $default  reduce using rule 52 (term)


state 56

   44 multiplicative_expr: term .
   45                    | term . MULT multiplicative_expr
   46                    | term . DIV multiplicative_expr
   47                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 44 (multiplicative_expr)


state 57

   48 var: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   49    | ident .
   58 term: ident . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 92
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 49 (var)


state 58

   13 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 93


state 59

   14 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    statements  go to state 94
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 60

   15 statement: FOREACH ident . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 95


state 61

   50 vars: var .
   51     | var . COMMA vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 50 (vars)


state 62

   16 statement: READ vars .

    $default  reduce using rule 16 (statement)


state 63

   17 statement: WRITE vars .

    $default  reduce using rule 17 (statement)


state 64

   56 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 97
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 65

   19 statement: RETURN expression .

    $default  reduce using rule 19 (statement)


state 66

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


state 67

    9 statements: statement SEMICOLON . statements
   10           | statement SEMICOLON .

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 10 (statements)

    statements  go to state 98
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 68

   11 statement: var ASSIGN . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 99
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 69

   48 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 100
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 70

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (declaration)


state 71

   57 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 101
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 72

   55 term: SUB NUMBER .

    $default  reduce using rule 55 (term)


state 73

   53 term: SUB var .

    $default  reduce using rule 53 (term)


state 74

   31 relation_exp: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 102


state 75

   28 relation_exp: expression . comp expression
   56 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103
    GT       shift, and go to state 80
    GTE      shift, and go to state 81
    LT       shift, and go to state 82
    LTE      shift, and go to state 83
    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85

    comp  go to state 86


state 76

   26 relation_expr: NOT relation_exp .

    $default  reduce using rule 26 (relation_expr)


state 77

   12 statement: IF bool_expr THEN . statements else_statement ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    statements  go to state 104
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 78

   23 bool_expr: relation_and_expr OR . bool_expr

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    bool_expr            go to state 105
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    relation_exp         go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 79

   25 relation_and_expr: relation_expr AND . relation_and_expr

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    relation_and_expr    go to state 106
    relation_expr        go to state 51
    relation_exp         go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 80

   32 comp: GT .

    $default  reduce using rule 32 (comp)


state 81

   33 comp: GTE .

    $default  reduce using rule 33 (comp)


state 82

   34 comp: LT .

    $default  reduce using rule 34 (comp)


state 83

   35 comp: LTE .

    $default  reduce using rule 35 (comp)


state 84

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


state 85

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


state 86

   28 relation_exp: expression comp . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 107
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 87

   40 expression: multiplicative_expr SUB . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 108
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 88

   39 expression: multiplicative_expr ADD . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    expression           go to state 109
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 89

   45 multiplicative_expr: term MULT . multiplicative_expr

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    multiplicative_expr  go to state 110
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 90

   46 multiplicative_expr: term DIV . multiplicative_expr

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    multiplicative_expr  go to state 111
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 91

   47 multiplicative_expr: term MOD . multiplicative_expr

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    multiplicative_expr  go to state 112
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 92

   58 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    $default  reduce using rule 41 (expressions)

    expression           go to state 113
    expressions          go to state 114
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 93

   13 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    statements  go to state 115
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 94

   14 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 116


state 95

   15 statement: FOREACH ident IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 117


state 96

   51 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    var    go to state 61
    vars   go to state 118
    ident  go to state 41


state 97

   56 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103


state 98

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


state 99

   11 statement: var ASSIGN expression .

    $default  reduce using rule 11 (statement)


state 100

   48 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


state 101

   57 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 120


state 102

   31 relation_exp: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 31 (relation_exp)


state 103

   56 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


state 104

   12 statement: IF bool_expr THEN statements . else_statement ENDIF

    ELSE  shift, and go to state 121

    $default  reduce using rule 20 (else_statement)

    else_statement  go to state 122


state 105

   23 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 23 (bool_expr)


state 106

   25 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 25 (relation_and_expr)


state 107

   28 relation_exp: expression comp expression .

    $default  reduce using rule 28 (relation_exp)


state 108

   40 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 40 (expression)


state 109

   39 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 39 (expression)


state 110

   45 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 45 (multiplicative_expr)


state 111

   46 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 46 (multiplicative_expr)


state 112

   47 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 47 (multiplicative_expr)


state 113

   42 expressions: expression . COMMA expressions
   43            | expression .

    COMMA  shift, and go to state 123

    $default  reduce using rule 43 (expressions)


state 114

   58 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 124


state 115

   13 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 125


state 116

   14 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 126


state 117

   15 statement: FOREACH ident IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 127


state 118

   51 vars: var COMMA vars .

    $default  reduce using rule 51 (vars)


state 119

   48 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 48 (var)


state 120

   57 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


state 121

   21 else_statement: ELSE . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    statements  go to state 128
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 122

   12 statement: IF bool_expr THEN statements else_statement . ENDIF

    ENDIF  shift, and go to state 129


state 123

   42 expressions: expression COMMA . expressions

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    $default  reduce using rule 41 (expressions)

    expression           go to state 113
    expressions          go to state 130
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 124

   58 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (term)


state 125

   13 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 13 (statement)


state 126

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NOT      shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    bool_expr            go to state 131
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    relation_exp         go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    var                  go to state 55
    term                 go to state 56
    ident                go to state 57


state 127

   15 statement: FOREACH ident IN ident BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    statements  go to state 132
    statement   go to state 39
    var         go to state 40
    ident       go to state 41


state 128

   21 else_statement: ELSE statements .

    $default  reduce using rule 21 (else_statement)


state 129

   12 statement: IF bool_expr THEN statements else_statement ENDIF .

    $default  reduce using rule 12 (statement)


state 130

   42 expressions: expression COMMA expressions .

    $default  reduce using rule 42 (expressions)


state 131

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 14 (statement)


state 132

   15 statement: FOREACH ident IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 133


state 133

   15 statement: FOREACH ident IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 15 (statement)
